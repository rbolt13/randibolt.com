{
  "hash": "d3f7ccd86b9585d91b931948feedd6e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Phone Data\"\ndate: \"2025-02-06\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\nThis is a post with executable code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"tidyverse\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n# Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nccd <- read_csv(\"Call Center Data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1251 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Answer Rate, Service Level (20 Seconds)\ndbl  (4): Index, Incoming Calls, Answered Calls, Abandoned Calls\ntime (3): Answer Speed (AVG), Talk Duration (AVG), Waiting Time (AVG)\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n# Look at the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 9\n  Index `Incoming Calls` `Answered Calls` `Answer Rate` `Abandoned Calls`\n  <dbl>            <dbl>            <dbl> <chr>                     <dbl>\n1     1              217              204 94.01%                       13\n2     2              200              182 91.00%                       18\n3     3              216              198 91.67%                       18\n4     4              155              145 93.55%                       10\n5     5               37               37 100.00%                       0\n6     6              315              304 96.51%                       11\n# ℹ 4 more variables: `Answer Speed (AVG)` <time>,\n#   `Talk Duration (AVG)` <time>, `Waiting Time (AVG)` <time>,\n#   `Service Level (20 Seconds)` <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\ntail(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 9\n  Index `Incoming Calls` `Answered Calls` `Answer Rate` `Abandoned Calls`\n  <dbl>            <dbl>            <dbl> <chr>                     <dbl>\n1  1246              202              195 96.53%                        7\n2  1247              191              184 96.34%                        7\n3  1248              212              209 98.58%                        3\n4  1249              210              203 96.67%                        7\n5  1250              167              159 95.21%                        8\n6  1251               12               11 91.67%                        1\n# ℹ 4 more variables: `Answer Speed (AVG)` <time>,\n#   `Talk Duration (AVG)` <time>, `Waiting Time (AVG)` <time>,\n#   `Service Level (20 Seconds)` <chr>\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}